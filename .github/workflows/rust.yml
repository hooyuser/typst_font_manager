name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Dependencies
        uses: Swatinem/rust-cache@v2
        with:
          key: rust-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          cache-on-failure: true

      - name: Build Release Binary
        run: cargo build --release

      - name: Extract Binary Name from Cargo.toml
        id: binary_name
        run: |
          BINARY_NAME=$(cargo metadata --format-version=1 --no-deps | jq -r '.packages[0].targets[] | select(.kind[] == "bin") | .name')
          echo "BINARY_NAME=${BINARY_NAME}" >> $GITHUB_ENV

      - name: Verify Binary Existence
        run: |
          echo "Binary Name: $BINARY_NAME"
          ls target/release/$BINARY_NAME

      - name: Create Git Tag
        if: github.ref == 'refs/heads/main'
        run: |
          TAG="v$(date +%Y%m%d%H%M%S)"
          echo "TAG=${TAG}" >> $GITHUB_ENV
          git tag ${TAG}
          git push origin ${TAG}

      - name: Upload Binary to Release
        if: github.ref == 'refs/heads/main'
        uses: softprops/action-gh-release@v1
        with:
          files: |
            target/release/${{ env.BINARY_NAME }}
          tag_name: ${{ env.TAG }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
